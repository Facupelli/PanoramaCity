// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.Text
    access_token      String?  @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id              String    @id @default(cuid())
    name            String?
    email           String?   @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
    properties      Property[]
    phone           String?
    companyName     String?
    companyLogoUrl  String?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}


// Properties

model Operation {
    id              String          @id @default(cuid())
    name            String      @unique
    properties      Property[]
}

model PropertyType {
    id              String          @id @default(cuid())
    name            String          @unique
    properties      Property[]
}

model Amenity {
    id              String          @id @default(cuid())
    name            String          @unique
    properties      Property[]
}

model Utility {
    id              String          @id @default(cuid())
    name            String          @unique
    properties      Property[]
}

model Property {
    id              String          @id @default(cuid())
    typeId          String
    propertyType    PropertyType    @relation(fields: [typeId], references: [id])
    userId          String
    user            User            @relation(fields: [userId], references: [id])
    propertyInfo    PropertyInfo?
    propertyMedia   PropertyMedia?
    amenities       Amenity[]
    utilities       Utility[]
    title           String
    description     String
    operationId     String
    operation       Operation       @relation(fields: [operationId], references: [id])
    price           Int
    locationLat     Float
    locationLng     Float

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    @@index([userId])
    @@index([typeId])
    @@index([operationId])
}

model PropertyInfo {
    id              String        @id @default(cuid())
    propertyId      String        @unique
    property        Property      @relation(fields: [propertyId], references: [id])
    address         String
    city            String
    zone            String
    floor           String?
    surface         Int
    buildYear       Int
    orientation     String
    ambiences       Int
    bathrooms       Int
    bedrooms        Int
}

model PropertyMedia {
    id              String        @id @default(cuid())
    images          Json
    video           String
    tour            String?
    propertyId      String        @unique
    property        Property      @relation(fields: [propertyId], references: [id])
}